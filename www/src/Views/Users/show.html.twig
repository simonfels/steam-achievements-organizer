{% extends 'Layouts/main.html.twig' %}

{% block content %}
    <div class="my-3">
        <a href="#" class="inline-block px-2 py-1 rounded bg-neutral-600">Games</a>
        <a href="/users/activity.php?{{ {'userid': user.id}|url_encode }}" class="inline-block px-2 py-1 rounded bg-neutral-800">Activity</a>
    </div>
    <div id="app">
        {% verbatim %}
            <div class="sticky top-0 bg-neutral-950/90 p-2 z-50 backdrop-blur">
                <div class="w-full sm:w-3/5 flex mx-auto mb-2">
                    <div class="text-xl bg-neutral-800 leading-5 text-center p-2">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </div>
                    <input type="text" v-model="searchBox" class="w-full p-2 bg-neutral-800 text-white" placeholder="search" />
                </div>
                <div class="flex justify-center">
                    <div class="basis-1/3 sm:basis-24">
                        <input type="checkbox" value="wip" id="listMode2" v-model="listMode" class="hidden peer" />
                        <label for="listMode2" class="text-center w-full peer-checked:text-green-500 peer-checked:bg-green-900 inline-block bg-neutral-500 py-2">WIP</label>
                    </div>
                    <div class="basis-1/3 sm:basis-24">
                        <input type="checkbox" value="completed" id="listMode1" v-model="listMode" class="hidden peer" />
                        <label for="listMode1" class="text-center w-full peer-checked:text-green-500 peer-checked:bg-green-900 inline-block bg-neutral-500 py-2">100%</label>
                    </div>
                    <div class="basis-1/3 sm:basis-24">
                        <input type="checkbox" value="none" id="listMode3" v-model="listMode" class="hidden peer" />
                        <label for="listMode3" class="text-center w-full peer-checked:text-green-500 peer-checked:bg-green-900 inline-block bg-neutral-500 py-2">0%</label>
                    </div>
                </div>
            </div>
            <div class="text-sm text-neutral-500 mb-2 text-center">{{ games.length }}/{{ originalGames.length }} Games</div>
            <div class="grid md:grid-cols-4 grid-cols-1 gap-1">
                    <div v-for="game in games">
                        <a :href="'/games/user.php?gameid=' + game.id + '&userid=' + userId" class="flex">
                            <div :style="{ backgroundColor: 'hsl(' + Math.floor(game.achievement_percent) + ', 50%, 35%)' }" class="w-1 shrink-0"></div>
                            <div class="p-2 bg-neutral-800 grow">
                                <div class="line-clamp-1 text-white mb-2">
                                    <span v-html="highlight(game.name)" :title="game.name"></span>
                                </div>
                                <div class="flex justify-between text-sm leading-3 text-neutral-400">
                                    <span class="truncate"><i class="fa-solid fa-trophy"></i> {{ game.unlocked_achievements }}/{{ game.total_achievements }}</span>
                                    
                                    <span v-if="!game.completed_at">{{ game.achievement_percent }}<i class="ml-1 fa-solid fa-percent"></i></span>
                                    <span v-else>{{ game.completed_at }}<i class="fa-solid fa-crown ml-1"></i></span>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
        {% endverbatim %}
        <script>
        const {createApp, ref, computed} = Vue

        createApp({
            setup() {
                const listMode = ref(['wip']) // wip, completed, none
                const searchBox = ref('')
                const userId = '{{ user.id }}'
                const originalGames = [{{ games|raw }}]

                const games = computed(() => {
                    return originalGames.filter((game) => {
                        let none = game.unlocked_achievements === 0
                        let completed = !!game.completed_at
                        let wip = !(none || completed)
                        let result = false

                        if(listMode.value.includes('wip'))
                            result ||= wip
                        if(listMode.value.includes('none'))
                            result ||= none
                        if(listMode.value.includes('completed'))
                            result ||= completed

                        return result;
                    }).filter((b) => {
                        if (searchBox.value.length === 0)
                            return true
                        let searchValue = searchBox.value.toLowerCase()
                        let gameName = b.name.toLowerCase()
                        return gameName.includes(searchValue)
                    })
                })

                function highlight(name) {
                    if (searchBox.value.length === 0)
                        return name
                    return name ? name.replaceAll(new RegExp('(' + searchBox.value + ')', "ig"), '<span class="text-green-500">$1</span>') : '';
                }

                return {
                    games, listMode, searchBox, highlight, userId, originalGames
                }
            }
        }).mount('#app')
    </script>
{% endblock %}
