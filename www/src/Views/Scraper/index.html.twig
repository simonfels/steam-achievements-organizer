{% extends 'Layouts/main.html.twig' %}

{% block content %}
<div id="app">
    <form action="/scraper/user.php" @submit.prevent="onSubmit">
        <label>Steam-ID</label>
        <input type="text" placeholder="Steam-ID" name="userid">
        <input type="submit">
    </form>
    {% if users is not empty %}
        <table>
            <thead>
                <th>Username</th>
                <th>Games</th>
                <th>Achievements</th>
                <th colspan="3">Actions</th>
            </thead>
            <tbody>
                <tr v-for="user in users">
                    {% verbatim %}
                    <td>{{ user.name }}</td>
                    <td>{{ user.games_count }}</td>
                    <td>{{ user.total_achievements }}</td>
                    <td><a class="text-orange-300" @click="fetchAsync('/scraper/user.php?userid=' + user.id)">user</a></td>
                    <td><a class="text-green-300" @click="fetchAsync('/scraper/games.php?userid=' + user.id)">games</a></td>
                    <td><a class="text-red-300" @click="fetchAsync('/scraper/achievements.php?userid=' + user.id)">achievements</a></td>
                    {% endverbatim %}
                </tr>
            </tbody>
        </table>
    {% endif %}
</div>

{% if result is defined and operation is defined %}
    <p>Operation: {{ operation }}</p>
    <p>Success: {{ result ? '✔️' : '❌' }}</p>
    <p># of API-Calls: {{ api_calls }}</p>
{% endif %}

<script>
    const { createApp, ref, computed } = Vue

    createApp({
        setup() {
            const users = ref({{ users|raw }})

            function onSubmit(event) {
                let userid = event.target.elements.userid.value

                fetch('/scraper/user.php?userid=' + userid)
                    .then(response => response.json())
                    .then(data => users.value = data["users"])
            }

            function fetchAsync(url) {
                fetch(url)
                    .then(response => response.json())
                    .then(data => users.value = data["users"])
            }

            return {
                users, onSubmit, fetchAsync
            }
        }
    }).mount('#app')
</script>
{% endblock %}
