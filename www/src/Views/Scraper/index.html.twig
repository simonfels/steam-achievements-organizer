{% extends 'Layouts/main.html.twig' %}

{% block content %}
<div id="app">
    <form action="/scraper/user.php" @submit.prevent="onSubmit">
        <label>Steam-ID</label>
        <input type="text" placeholder="Steam-ID" name="userid">
        <input type="submit">
    </form>
    <div class="grid grid-cols-2">
        <div>
            <table class="w-full">
                <thead>
                    <th class="border-neutral-600 border text-sm">Username</th>
                    <th class="border-neutral-600 border text-sm">Games</th>
                    <th class="border-neutral-600 border text-sm">Achievements</th>
                    <th class="border-neutral-600 border text-sm" colspan="3">Actions</th>
                </thead>
                <tbody>
                    <tr class="border border-neutral-600" v-for="user in users">
                        {% verbatim %}
                            <td>{{ user.name }}</td>
                            <td class="text-right">{{ user.games_count }}</td>
                            <td class="text-right">{{ user.total_achievements }}</td>
                            <td class="p-0 border-l border-neutral-600 text-center">
                                <a class="text-mint py-1 px-2 w-full border border-mint inline-block" @click="fetchAsync('/scraper/user.php?userid=' + user.id, $event)">
                                    <i class="pointer-events-none fa-solid fa-user"></i>
                                </a>
                            </td>
                            <td class="p-0 text-center">
                                <a class="text-mint py-1 px-2 w-full border border-mint inline-block" @click="fetchAsync('/scraper/games.php?userid=' + user.id, $event)">
                                    <i class="pointer-events-none fa-solid fa-gamepad"></i>
                                </a>
                            </td>
                            <td class="p-0 text-center">
                                <a class="text-mint py-1 px-2 w-full border border-mint inline-block" @click="fetchAsync('/scraper/achievements.php?userid=' + user.id, $event)">
                                    <i class="pointer-events-none fa-solid fa-trophy"></i>
                                </a>
                            </td>
                        {% endverbatim %}
                    </tr>
                </tbody>
            </table>
        </div>

        
        <div>
            {% verbatim %}
                <table class="w-full">
                    <thead>
                        <th class="border-neutral-600 border text-sm">URL</th>
                        <th class="border-neutral-600 border text-sm">Operation</th>
                        <th class="border-neutral-600 border text-sm">Success</th>
                        <th class="border-neutral-600 border text-sm">Api-Calls</th>
                    </thead>
                    <tbody>
                        <tr v-for="apiCall in apiCalls">
                            <td class="text-xs">{{ apiCall.url }}</td>
                            <td>{{ apiCall.operation }}</td>
                            <td>{{ apiCall.result ? '✔️' : '❌' }}</td>
                            <td>{{ apiCall.api_calls }}</td>
                        </tr>
                    </tbody>
                </table>
            {% endverbatim %}
        </div>
    </div>
</div>

<script>
    const { createApp, ref, computed } = Vue

    createApp({
        setup() {
            const users = ref({{ users|raw }})
            const apiCalls = ref([])
            const spinner = document.createElement("i");
            spinner.classList = ["fa-solid fa-spinner text-black animate-spin pointer-events-none"];

            function onSubmit(event) {
                let userid = event.target.elements.userid.value

                fetch('/scraper/user.php?userid=' + userid)
                    .then(response => response.json())
                    .then(data => users.value = data["users"])
            }

            function fetchAsync(url, event) {
                let target = event.target
                let child = target.children[0]
                let copyChild = child.cloneNode()
                let newChild = spinner.cloneNode()
                
                target.classList.toggle('pointer-events-none')
                target.classList.toggle('bg-mint')
                child.replaceWith(newChild)

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        target.classList.toggle('pointer-events-none')
                        target.classList.toggle('bg-mint')
                        newChild.replaceWith(copyChild)
                        this.users = data["users"]
                        this.apiCalls.push({'url': url, 'operation':data['operation'],'result':data['result'],'api_calls':data['api_calls']})
                    })
            }

            return {
                users, onSubmit, fetchAsync, apiCalls
            }
        }
    }).mount('#app')
</script>
{% endblock %}
