{% extends 'Layouts/main.html.twig' %}

{% block content %}
<div id="app">
    <div class="sticky top-0">
        <div class="bg-orange-400 text-neutral-950 p-3">
            <h1 class="text-2xl mb-2"><strong>{{ game.name }}</strong></h1>
            <label class="font-bold" for="checkbox"><input type="checkbox" id="checkbox" v-model="myVar" class="mb-3" /> Show unlocked achievements</label><br>
            <label class="font-bold inline-block p-2" for="searchbox">Search</label><input type="text" id="searchbox" v-model="searchbox" />
        </div>
    </div>
    <div class="grid gap-0 grid-cols-1 md:grid-cols-2 m-4">
        {% verbatim %}
            <div class="border-white overflow-hidden flex flex-col justify-between w-full p-1" :class="{ 'opacity-60': achievement.achieved }" v-for="achievement in achievements">
                <div class="flex">
                    <div :style="{ 'background-image': 'url(' + (achievement.achieved ? achievement.icon : achievement.icongray) + ')' }" class="w-12 h-12 bg-cover flex-none mr-2"></div>
                    <div>
                        <p class="text-lg line-clamp-1 text-neutral-300"><span v-html="highlight(achievement.display_name)"></span></p>
                        <p class="text-sm line-clamp-1 hover:line-clamp-none text-neutral-400"><span v-html="highlight(achievement.description)"></p>
                    </div>
                </div>
                <div class="text-right text-sm text-neutral-100 mt-2" v-if="achievement.unlocked_at">{{ achievement.unlocked_at }}</div>
            </div>
        {% endverbatim %}
    </div>
</div>
<script>
    const { createApp, ref, computed } = Vue

    createApp({
        setup() {
            const myVar = ref(false)
            const searchbox = ref('')

            const achievements = computed(() => {
                return [{{ achievements|raw }}].filter((ach) => !ach.achieved || !!ach.achieved && myVar.value ).filter((b) => {
                    if(searchbox.value.length === 0)
                        return true
                    let searchValue = searchbox.value.toLowerCase()
                    let achievementDisplayName = b.display_name.toLowerCase()
                    let achievementDescription = b.description ? b.description.toLowerCase() : ''
                    return achievementDisplayName.includes(searchValue) || achievementDescription.includes(searchValue)
                })
            })

            function highlight(name) {
                if(searchbox.value.length === 0)
                    return name
                return name ? name.replaceAll(new RegExp('(' + searchbox.value + ')', "ig"), '<span class="text-green-500">$1</span>') : '';
            }

            return {
                achievements, myVar, searchbox, highlight
            }
        }
    }).mount('#app')
</script>
{% endblock %}
