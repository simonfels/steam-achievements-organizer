{% extends 'Layouts/main.html.twig' %}

{% block content %}
<div id="app">
    <div class="bg-neutral-800 text-neutral-300 p-3">
        <h1 class="text-2xl text-emerald-400"><strong>{{ game.name }}</strong></h1>
        <h2 class="text-lg">Achievements</h2>
    </div>
    <label for="checkbox"><input type="checkbox" id="checkbox" v-model="myVar" /> Show unlocked achievements</label>
    <div class="grid gap-0 grid-cols-1 md:grid-cols-2 m-4 border-l border-t">
        {% verbatim %}
            <div class="border-white border-r border-b overflow-hidden flex flex-col justify-between w-full p-1" :class="{ 'opacity-60': achievement.achieved }" v-for="achievement in achievements">
                <div class="flex">
                    <div :style="{ 'background-image': 'url(' + (achievement.achieved ? achievement.icon : achievement.icongray) + ')' }" class="w-12 h-12 bg-cover flex-none mr-2"></div>
                    <div>
                        <p class="text-lg line-clamp-1 text-neutral-300">{{ achievement.display_name }}</p>
                        <p class="text-sm line-clamp-1 hover:line-clamp-none text-neutral-400">{{ achievement.description }}</p>
                    </div>
                </div>
                <div class="text-right text-sm text-neutral-100 mt-2" v-if="achievement.unlocked_at">{{ achievement.unlocked_at }}</div>
            </div>
        {% endverbatim %}
    </div>
</div>
<script>
    const { createApp, ref, computed } = Vue



    const myVar = ref(false)
    const achievements = computed(() => {
        return [{{ achievements|raw }}].filter((ach) => !ach.achieved || !!ach.achieved && myVar.value )
    })

    createApp({
        setup() {
            return {
                achievements, myVar
            }
        }
    }).mount('#app')
</script>
{% endblock %}
