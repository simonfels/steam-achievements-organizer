{% extends 'Layouts/main.html.twig' %}

{% block head_content %}
    <title>Tracker | Users :: {{ user.name }} :: {{ game.name }}</title>
{% endblock %}

{% block content %}
    {% include 'Games/_subnav.html.twig' with { 'user': user, 'game': game } only %}

    <div id="app">
        <div class="sticky top-0 bg-white dark:bg-dark z-50 py-2">
            <div class="flex">
                {% include 'Components/searchbox.html.twig' %}
                <div class="flex text-xl">
                    {% set listModes = [{ 'value': 'locked', 'icon': 'fa-lock' }, { 'value': 'achieved', 'icon': 'fa-lock-open' }] %}
                    {% for listMode in listModes %}
                        <div class="ml-1">
                            <input type="radio" value="{{ listMode.value }}" id="{{ listMode.value }}" v-model="listMode" class="hidden peer" />
                            <label for="{{ listMode.value }}" class="h-full block px-3 peer-checked:bg-mint bg-neutral-300 dark:bg-neutral-700">
                                <i class="fa-solid {{ listMode.icon }} align-sub"></i>
                            </label>
                        </div>
                    {% endfor %}
                </div>
            </div>
            {% if tags|length > 0 %}
                <div class="flex flex-row-reverse mt-1">
                    <div class="flex flex-wrap">
                        {% for tag in tags %}
                            <div class="ml-1 mb-1">
                                <input type="radio" v-model="tagMode" class="hidden peer" value="{{ tag.id }}" id="tagMode{{ tag.id }}">
                                <label for="tagMode{{ tag.id }}" class="h-full block px-3 peer-checked:bg-mint bg-neutral-300 dark:bg-neutral-700" @click.prevent="checkTag($event)">
                                    <i class="pointer-events-none fa-solid align-sub"></i>
                                    <span class="pointer-events-none inline-block py-2">{{ tag.name }}</span>
                                </label>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            {% endif %}
        </div>
        {% if game.completed_at is not null %}
            <div class="text-center text-xl py-4 bg-mint text-white">
                <div class="text-3xl text-white"><i class="fa-solid fa-check"></i></div>
                <div>Completed</div>
                <div class="text-white text-sm mt-1"><i class="fa-solid fa-calendar"></i> {{ game.formatted_completed_at }}</div>
            </div>
        {% else %}
            {% verbatim %}
                <div class="text-sm text-neutral-500 dark:text-neutral-400 mb-2 text-center">{{ unachievedAchievements.length }}/{{ achievedAchievements.length }} Achievements</div>
                <div class="grid gap-1 grid-cols-1 md:grid-cols-2 2xl:grid-cols-3" v-if="unachievedAchievements.length > 0">
                    <div class="flex" v-for="achievement in unachievedAchievements">
                        <div class="flex flex-col justify-between bg-neutral-300 dark:bg-neutral-700 w-full pb-2 pr-2 text-xs text-neutral-600 dark:text-neutral-300">
                            <div>
                                <div class="flex mb-2 pl-2">
                                    <div :style="{'background-image': `url(${achievement.correct_icon})`}" class="w-8 h-8 bg-cover flex-none transition-all"></div>
                                    <div class="text-base line-clamp-1 px-2 pt-2 dark:text-white text-dark" v-html="highlight(achievement.display_name)"></div>
                                </div>
                                <div class="line-clamp-2 hover:line-clamp-none px-2 leading-5" v-html="highlight(achievement.description)"></div>
                            </div>
                            <div class="text-right mt-2" v-if="achievement.unlocked_at">
                                {{ achievement.unlocked_at }} <i class="fa-regular fa-clock"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="text-center py-2 text-5xl text-red-500" v-else>
                    <i class="fa-solid fa-fire animate-pulse"></i>
                </div>
            {% endverbatim %}
        {% endif %}
    </div>
    <script>
        const { createApp, ref, computed } = Vue

        createApp({
            setup() {
                const listMode = ref('locked')
                const tagMode =ref('all')
                const searchBox = ref('')
                const originalAchievements = {{ achievements|raw }}

                const achievedAchievements = computed(() => {
                    return originalAchievements.filter((achievement) => tagFilter(achievement))
                })

                const unachievedAchievements = computed(() => {
                    return originalAchievements.filter((ach) => {
                        switch (listMode.value) {
                            case 'achieved': return ach.achieved;
                            case 'locked': return !ach.achieved;
                        }
                    }).filter((achievement) => tagFilter(achievement))
                    .filter((b) => {
                        if(searchBox.value.length === 0)
                            return true
                        let searchValue = searchBox.value.toLowerCase()
                        let achievementDisplayName = b.display_name.toLowerCase()
                        let achievementDescription = b.description ? b.description.toLowerCase() : ''
                        return achievementDisplayName.includes(searchValue) || achievementDescription.includes(searchValue)
                    })
                })

                function tagFilter(achievement) {
                    if(tagMode.value === 'all')
                        return true
                    else if(tagMode.value === '-1')
                        return achievement.tag_ids === null
                    else if(achievement.tag_ids === null)
                        return false
                    else
                        return achievement.tag_ids.includes(tagMode.value)
                }

                function highlight(name) {
                    if(searchBox.value.length === 0)
                        return name
                    return name ? name.replaceAll(new RegExp('(' + searchBox.value + ')', "ig"), '<span class="text-mint">$1</span>') : '';
                }

                function checkTag(event) {
                    let clickedValue = event.srcElement.control.value
                    
                    tagMode.value = tagMode.value === clickedValue ? 'all' : clickedValue
                }

                return {
                    achievedAchievements, unachievedAchievements, listMode, searchBox, highlight, tagMode, originalAchievements, checkTag
                }
            }
        }).mount('#app')
    </script>
{% endblock %}
