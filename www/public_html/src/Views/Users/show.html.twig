{% extends 'Layouts/main.html.twig' %}

{% block head_content %}
    <title>Tracker | Users :: {{ user.name }}</title>
{% endblock %}

{% block content %}
    {% include 'Users/_subnav.html.twig' with { 'user': user, 'path': path } only %}
    <div id="app">
        <div class="sticky top-0 bg-white dark:bg-dark z-40 flex py-2">
            {% include 'Components/searchbox.html.twig' only %}
            <div class="flex text-xl">
                {% 
                    set listModes = [
                        { 'value': 'none', 'icon': 'fa-battery-empty', 'description': '0% Games'  },
                        { 'value': 'wip', 'icon': 'fa-battery-half', 'description': '>0% Games' },
                        { 'value': 'completed', 'icon': 'fa-battery-full', 'description': '100% Games' }
                    ]
                %}
                {% for listMode in listModes %}
                    <div>
                        <input type="radio" value="{{ listMode.value }}" id="{{ listMode.value }}" v-model="listMode" class="hidden peer" />
                        <label for="{{ listMode.value }}" class="h-full block px-3 peer-checked:bg-mint dark:peer-checked:bg-lila bg-neutral-300 dark:bg-neutral-700 ml-1" title="{{ listMode.description }}">
                            <i class="fa-solid {{ listMode.icon }} align-sub"></i>
                        </label>
                    </div>
                {% endfor %}
            </div>
        </div>
        {% verbatim %}
            <div class="text-sm text-neutral-500 dark:text-neutral-400 mb-2 text-center">{{ games.length }}/{{ originalGames.length }} Games</div>
            <div class="grid md:grid-cols-2 grid-cols-1 gap-1">
                <div v-for="game in games">
                    <a :href="'/games/user.php?gameid=' + game.id + '&userid=' + userId" class="flex">
                        <div :style="{ backgroundColor: 'hsl(' + Math.floor(game.achievement_percent) * 1.64 + ', 86.7%, 50%)' }" class="w-2 shrink-0" v-if="game.achievement_percent < 100"></div>
                        <div class="w-2 shrink-0 dark:bg-lila bg-mint" v-if="game.achievement_percent == 100"></div>
                        <div class="p-2 bg-neutral-300 dark:bg-neutral-700 grow">
                            <div class="line-clamp-1 mb-2">
                                <span v-html="highlight(game.name)" :title="game.name"></span>
                            </div>
                            <div class="flex justify-between text-sm leading-3 dark:text-neutral-400 text-neutral-500">
                                <span class="truncate"><i class="fa-solid fa-trophy"></i> {{ game.unlocked_achievements }}/{{ game.total_achievements }}</span>
                                
                                <span v-if="!game.completed_at">{{ game.achievement_percent }}<i class="ml-1 fa-solid fa-percent"></i></span>
                                <span v-else>{{ game.completed_at }}<i class="fa-solid fa-crown ml-1"></i></span>
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        {% endverbatim %}
    </div>
    <script>
        const {createApp, ref, computed} = Vue

        createApp({
            setup() {
                const listMode = ref() // wip, completed, none
                const searchBox = ref('')
                const userId = '{{ user.id }}'
                const originalGames = [{{ games|raw }}]

                const games = computed(() => {
                    return originalGames.filter((game) => {
                        let none = game.unlocked_achievements === 0
                        let completed = !!game.completed_at
                        let wip = !(none || completed)
                        let result = false

                        if(listMode.value === 'wip')
                            return result ||= wip
                        if(listMode.value === 'none')
                            return result ||= none
                        if(listMode.value === 'completed')
                            return result ||= completed

                        return true;
                    }).filter((b) => {
                        if (searchBox.value.length === 0)
                            return true
                        let searchValue = searchBox.value.toLowerCase()
                        let gameName = b.name.toLowerCase()
                        return gameName.includes(searchValue)
                    })
                })

                function highlight(name) {
                    if (searchBox.value.length === 0)
                        return name
                    return name ? name.replaceAll(new RegExp('(' + searchBox.value + ')', "ig"), '<span class="bg-mint dark:bg-lila">$1</span>') : '';
                }

                return {
                    games, listMode, searchBox, highlight, userId, originalGames
                }
            }
        }).mount('#app')
    </script>
{% endblock %}
